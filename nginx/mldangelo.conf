# Run the command below to create a symbolic link between this file and nginx
# sudo ln /home/ubuntu/cocoellis/nginx/cocoellis.conf /etc/nginx/sites-enabled/cocoellis.conf


server {
  listen 443 ssl;
  server_name www.cocoellis.com cocoellis.com;
  access_log /var/log/nginx/cocoellis.log;

  ssl_certificate "/etc/letsencrypt/live/cocoellis.com/fullchain.pem";
  ssl_certificate_key "/etc/letsencrypt/live/cocoellis.com/privkey.pem";

  ssl_session_cache shared:SSL:1m;
  ssl_session_timeout  10m;
  ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
  ssl_ciphers HIGH:SEED:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!RSAPSK:!aDH:!aECDH:!EDH-DSS-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA:!SRP;
  ssl_prefer_server_ciphers on;

  # Enable Gzip
  gzip on;
  gzip_http_version 1.1;
  gzip_comp_level 9;
  gzip_min_length 1000;
  gzip_buffers 16 8k;
  gzip_proxied any;
  gzip_types
    text/css
    text/javascript
    application/javascript
    application/x-javascript
    application/json
    font/truetype
    font/opentype
    application/vnd.ms-fontobject
    image/jpeg
    image/png
    image/svg+xml;

  gzip_static on;

  gzip_proxied        expired no-cache no-store private auth;
  gzip_disable        "MSIE [1-6]\.";
  gzip_vary           on;
  
  location / {
    proxy_pass http://localhost:7999;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection 'upgrade';
    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-Proto http;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_cache_bypass $http_upgrade;
  }
  
  # Serve react via nginx 
  location /dist/ {
     alias /home/ubuntu/cocoellis/dist/;
     expires max;
  }
  
  # Serve images via nginx 
  location /images/ {
     alias /home/ubuntu/cocoellis/public/images/;
     expires max;
  }
  
  # Nearest dollar
  location /projects/nearestdollar/ {
    proxy_pass http://localhost:7645;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection 'upgrade';
    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-Proto http;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_cache_bypass $http_upgrade;
  }

}

server {
  listen 80;
  server_name cocoellis.com www.cocoellis.com;
  return 301 https://cocoellis.com$request_uri;
}
